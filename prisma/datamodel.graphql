type Team {
  id: ID! @unique
  name: String!
  nameNormalized: String
  accounts: [Account!]!
  members: [TeamMember!]!
}

type User {
  id: ID! @unique
  email: String! @unique
  emailNormalized: String
  firstName: String!
  lastName: String
  passwordHash: String!
  teams: [TeamMember!]!
}

enum TeamMemberRole {
  ADMIN
  MANAGER
  MEMBER
}

type TeamMember {
  id: ID! @unique
  team: Team!
  user: User!
  role: TeamMemberRole! @default(value: "MEMBER")
  canInvite: Boolean! @default(value: "false")
  accounts: [TeamMemberAccount!]!
}

type Account {
  id: ID! @unique
  name: String!
  nameNormalized: String
  balance: Float! @default(value: "0.0")
  revenue: Float! @default(value: "0.0")
  spendings: Float! @default(value: "0.0")
  categories: [Category!]!
  payments: [Payment!]!
  team: Team!
  members: [TeamMemberAccount!]!
  peers: [Peer!]!
  rawData: Json
}

type TeamMemberAccount {
  id: ID! @unique
  teamMember: TeamMember!
  account: Account!
}

type Payment {
  id: ID! @unique
  account: Account!
  postedOn: DateTime!
  amount: Float!
  peerName: String
  peerNameNormalized: String
  peer: Peer
  description: String
  descriptionNormalized: String
  comments: [Comment!]!
  category: Category
  rawData: Json!
}

type Peer {
  id: ID! @unique
  account: Account!
  name: String!
  nameNormalized: String
  total: Float! @default(value: "0.0")
  revenue: Float! @default(value: "0.0")
  spendings: Float! @default(value: "0.0")
  lastPaymentDate: DateTime
  payments: [Payment!]!
  paymentCount: Int @default(value: "0")
  category: Category @relation(name: "PeerDefaultCategory")
  categories: [PeerCategory!]! @relation(name: "PeerCategory_Peer")
}

type Comment {
  id: ID! @unique
  payment: Payment!
  user: User
  body: Json!
}

type Category {
  id: ID! @unique
  account: Account!
  name: String!
  nameNormalized: String
  color: String!
  peers: [PeerCategory!]! @relation(name: "PeerCategory_Category")
}

type PeerCategory {
  id: ID! @unique
  peer: Peer! @relation(name: "PeerCategory_Peer")
  category: Category! @relation(name: "PeerCategory_Category")
  count: Int!
  total: Float!
  revenue: Float!
  spendings: Float!
}

type Story {
  id: ID! @unique
  account: Account!
  title: String!
  body: Json!
  coverImage: Json
  payments: [Payment!]!
}
