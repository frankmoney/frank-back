type Query {
  inbox(accountId: ID!, first: Int!, after: ID): [Payment!]!
  ledgerCategoriesPercentage(accountId: ID!, precision: Int!, dateMin: DateTime, dateMax: DateTime): LedgerCategoriesPercentage!
  ledgerPayments(accountId: ID!, first: Int!, after: ID, search: String, dateMin: DateTime, dateMax: DateTime, amountMin: Float, amountMax: Float, verified: Boolean): [Payment!]!
  ledgerPaymentsCount(accountId: ID!, search: String, dateMin: DateTime, dateMax: DateTime, amountMin: Float, amountMax: Float, verified: Boolean, categoryId: ID): LedgerPaymentsCount!
  team: TeamResult!
  teamAccounts: [TeamAccountsResultAccount!]!
  teammate(id: ID!): TeammateResult!
  me: User
}

type Mutation {
  editTeamMemberRole(id: ID!, admin: Boolean!, canInvite: Boolean!, accountIds: [ID!]!): TeammateResult!
}

type Payment implements Node {
  id: ID!
  account(where: AccountWhereInput): Account!
  postedDate: DateTime!
  amount: Float!
  peerName: String
  peer(where: PeerWhereInput): Peer
  description: String
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  category(where: CategoryWhereInput): Category
  categoryName: String
  categoryColor: String
  rawData: Json!
}

type LedgerCategoriesPercentage {
  items: [LedgerCategoriesPercentageItem!]!
}

scalar DateTime

type LedgerPaymentsCount {
  count: Int!
}

type TeamResult {
  team: TeamResultTeam!
  self: TeamResultProfile!
  others: [TeamResultProfile!]!
}

type TeamAccountsResultAccount {
  id: ID!
  name: String!
}

type TeammateResult {
  id: ID!
  lastName: String
  firstName: String
  admin: Boolean!
  canInvite: Boolean!
  accountIds: [ID!]!
}

type User implements Node {
  id: ID!
  email: String!
  firstName: String!
  lastName: String
  passwordHash: String!
  teams(where: TeamMemberWhereInput, orderBy: TeamMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMember!]
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

type Account implements Node {
  id: ID!
  name: String!
  balance: Float!
  revenue: Float!
  spendings: Float!
  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment!]
  team(where: TeamWhereInput): Team!
  members(where: TeamMemberAccountWhereInput, orderBy: TeamMemberAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMemberAccount!]
  rawData: Json
}

input AccountWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AccountWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AccountWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AccountWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  balance: Float
  """
  All values that are not equal to given value.
  """
  balance_not: Float
  """
  All values that are contained in given list.
  """
  balance_in: [Float!]
  """
  All values that are not contained in given list.
  """
  balance_not_in: [Float!]
  """
  All values less than the given value.
  """
  balance_lt: Float
  """
  All values less than or equal the given value.
  """
  balance_lte: Float
  """
  All values greater than the given value.
  """
  balance_gt: Float
  """
  All values greater than or equal the given value.
  """
  balance_gte: Float
  revenue: Float
  """
  All values that are not equal to given value.
  """
  revenue_not: Float
  """
  All values that are contained in given list.
  """
  revenue_in: [Float!]
  """
  All values that are not contained in given list.
  """
  revenue_not_in: [Float!]
  """
  All values less than the given value.
  """
  revenue_lt: Float
  """
  All values less than or equal the given value.
  """
  revenue_lte: Float
  """
  All values greater than the given value.
  """
  revenue_gt: Float
  """
  All values greater than or equal the given value.
  """
  revenue_gte: Float
  spendings: Float
  """
  All values that are not equal to given value.
  """
  spendings_not: Float
  """
  All values that are contained in given list.
  """
  spendings_in: [Float!]
  """
  All values that are not contained in given list.
  """
  spendings_not_in: [Float!]
  """
  All values less than the given value.
  """
  spendings_lt: Float
  """
  All values less than or equal the given value.
  """
  spendings_lte: Float
  """
  All values greater than the given value.
  """
  spendings_gt: Float
  """
  All values greater than or equal the given value.
  """
  spendings_gte: Float
  payments_every: PaymentWhereInput
  payments_some: PaymentWhereInput
  payments_none: PaymentWhereInput
  team: TeamWhereInput
  members_every: TeamMemberAccountWhereInput
  members_some: TeamMemberAccountWhereInput
  members_none: TeamMemberAccountWhereInput
}

type Peer implements Node {
  id: ID!
  account(where: AccountWhereInput): Account!
  name: String!
  balance: Float!
  revenue: Float!
  spendings: Float!
  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment!]
  category(where: CategoryWhereInput): Category
  categoryName: String!
  categoryColor: String!
}

input PeerWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PeerWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PeerWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PeerWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  balance: Float
  """
  All values that are not equal to given value.
  """
  balance_not: Float
  """
  All values that are contained in given list.
  """
  balance_in: [Float!]
  """
  All values that are not contained in given list.
  """
  balance_not_in: [Float!]
  """
  All values less than the given value.
  """
  balance_lt: Float
  """
  All values less than or equal the given value.
  """
  balance_lte: Float
  """
  All values greater than the given value.
  """
  balance_gt: Float
  """
  All values greater than or equal the given value.
  """
  balance_gte: Float
  revenue: Float
  """
  All values that are not equal to given value.
  """
  revenue_not: Float
  """
  All values that are contained in given list.
  """
  revenue_in: [Float!]
  """
  All values that are not contained in given list.
  """
  revenue_not_in: [Float!]
  """
  All values less than the given value.
  """
  revenue_lt: Float
  """
  All values less than or equal the given value.
  """
  revenue_lte: Float
  """
  All values greater than the given value.
  """
  revenue_gt: Float
  """
  All values greater than or equal the given value.
  """
  revenue_gte: Float
  spendings: Float
  """
  All values that are not equal to given value.
  """
  spendings_not: Float
  """
  All values that are contained in given list.
  """
  spendings_in: [Float!]
  """
  All values that are not contained in given list.
  """
  spendings_not_in: [Float!]
  """
  All values less than the given value.
  """
  spendings_lt: Float
  """
  All values less than or equal the given value.
  """
  spendings_lte: Float
  """
  All values greater than the given value.
  """
  spendings_gt: Float
  """
  All values greater than or equal the given value.
  """
  spendings_gte: Float
  categoryName: String
  """
  All values that are not equal to given value.
  """
  categoryName_not: String
  """
  All values that are contained in given list.
  """
  categoryName_in: [String!]
  """
  All values that are not contained in given list.
  """
  categoryName_not_in: [String!]
  """
  All values less than the given value.
  """
  categoryName_lt: String
  """
  All values less than or equal the given value.
  """
  categoryName_lte: String
  """
  All values greater than the given value.
  """
  categoryName_gt: String
  """
  All values greater than or equal the given value.
  """
  categoryName_gte: String
  """
  All values containing the given string.
  """
  categoryName_contains: String
  """
  All values not containing the given string.
  """
  categoryName_not_contains: String
  """
  All values starting with the given string.
  """
  categoryName_starts_with: String
  """
  All values not starting with the given string.
  """
  categoryName_not_starts_with: String
  """
  All values ending with the given string.
  """
  categoryName_ends_with: String
  """
  All values not ending with the given string.
  """
  categoryName_not_ends_with: String
  categoryColor: String
  """
  All values that are not equal to given value.
  """
  categoryColor_not: String
  """
  All values that are contained in given list.
  """
  categoryColor_in: [String!]
  """
  All values that are not contained in given list.
  """
  categoryColor_not_in: [String!]
  """
  All values less than the given value.
  """
  categoryColor_lt: String
  """
  All values less than or equal the given value.
  """
  categoryColor_lte: String
  """
  All values greater than the given value.
  """
  categoryColor_gt: String
  """
  All values greater than or equal the given value.
  """
  categoryColor_gte: String
  """
  All values containing the given string.
  """
  categoryColor_contains: String
  """
  All values not containing the given string.
  """
  categoryColor_not_contains: String
  """
  All values starting with the given string.
  """
  categoryColor_starts_with: String
  """
  All values not starting with the given string.
  """
  categoryColor_not_starts_with: String
  """
  All values ending with the given string.
  """
  categoryColor_ends_with: String
  """
  All values not ending with the given string.
  """
  categoryColor_not_ends_with: String
  account: AccountWhereInput
  payments_every: PaymentWhereInput
  payments_some: PaymentWhereInput
  payments_none: PaymentWhereInput
  category: CategoryWhereInput
}

type Comment implements Node {
  id: ID!
  payment(where: PaymentWhereInput): Payment!
  user(where: UserWhereInput): User
  body: Json!
}

input CommentWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CommentWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CommentWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CommentWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  payment: PaymentWhereInput
  user: UserWhereInput
}

enum CommentOrderByInput {
  id_ASC
  id_DESC
  body_ASC
  body_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type Category implements Node {
  id: ID!
  name: String!
  color: String!
}

input CategoryWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CategoryWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CategoryWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CategoryWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  color: String
  """
  All values that are not equal to given value.
  """
  color_not: String
  """
  All values that are contained in given list.
  """
  color_in: [String!]
  """
  All values that are not contained in given list.
  """
  color_not_in: [String!]
  """
  All values less than the given value.
  """
  color_lt: String
  """
  All values less than or equal the given value.
  """
  color_lte: String
  """
  All values greater than the given value.
  """
  color_gt: String
  """
  All values greater than or equal the given value.
  """
  color_gte: String
  """
  All values containing the given string.
  """
  color_contains: String
  """
  All values not containing the given string.
  """
  color_not_contains: String
  """
  All values starting with the given string.
  """
  color_starts_with: String
  """
  All values not starting with the given string.
  """
  color_not_starts_with: String
  """
  All values ending with the given string.
  """
  color_ends_with: String
  """
  All values not ending with the given string.
  """
  color_not_ends_with: String
}

"""
Raw JSON value
"""
scalar Json

type LedgerCategoriesPercentageItem {
  category: Category
  incomePercentage: Float!
  expensesPercentage: Float!
}

type TeamResultTeam {
  id: ID!
  name: String!
  accounts: [TeamResultAccount!]!
}

type TeamResultProfile {
  id: ID!
  email: String!
  lastName: String
  firstName: String
  avatar: JSON
  admin: Boolean!
  canInvite: Boolean!
  accountIds: [String!]!
  acl: TeamResultAcl!
}

type TeamMember implements Node {
  id: ID!
  team(where: TeamWhereInput): Team!
  user(where: UserWhereInput): User!
  role: TeamMemberRole!
  canInvite: Boolean!
  accounts(where: TeamMemberAccountWhereInput, orderBy: TeamMemberAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMemberAccount!]
}

input TeamMemberWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TeamMemberWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TeamMemberWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TeamMemberWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  role: TeamMemberRole
  """
  All values that are not equal to given value.
  """
  role_not: TeamMemberRole
  """
  All values that are contained in given list.
  """
  role_in: [TeamMemberRole!]
  """
  All values that are not contained in given list.
  """
  role_not_in: [TeamMemberRole!]
  canInvite: Boolean
  """
  All values that are not equal to given value.
  """
  canInvite_not: Boolean
  team: TeamWhereInput
  user: UserWhereInput
  accounts_every: TeamMemberAccountWhereInput
  accounts_some: TeamMemberAccountWhereInput
  accounts_none: TeamMemberAccountWhereInput
}

enum TeamMemberOrderByInput {
  id_ASC
  id_DESC
  role_ASC
  role_DESC
  canInvite_ASC
  canInvite_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type Team implements Node {
  id: ID!
  name: String!
  accounts(where: AccountWhereInput, orderBy: AccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Account!]
  members(where: TeamMemberWhereInput, orderBy: TeamMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMember!]
}

type TeamMemberAccount implements Node {
  id: ID!
  teamMember(where: TeamMemberWhereInput): TeamMember!
  account(where: AccountWhereInput): Account!
}

input PaymentWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PaymentWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PaymentWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PaymentWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  postedDate: DateTime
  """
  All values that are not equal to given value.
  """
  postedDate_not: DateTime
  """
  All values that are contained in given list.
  """
  postedDate_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  postedDate_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  postedDate_lt: DateTime
  """
  All values less than or equal the given value.
  """
  postedDate_lte: DateTime
  """
  All values greater than the given value.
  """
  postedDate_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  postedDate_gte: DateTime
  amount: Float
  """
  All values that are not equal to given value.
  """
  amount_not: Float
  """
  All values that are contained in given list.
  """
  amount_in: [Float!]
  """
  All values that are not contained in given list.
  """
  amount_not_in: [Float!]
  """
  All values less than the given value.
  """
  amount_lt: Float
  """
  All values less than or equal the given value.
  """
  amount_lte: Float
  """
  All values greater than the given value.
  """
  amount_gt: Float
  """
  All values greater than or equal the given value.
  """
  amount_gte: Float
  peerName: String
  """
  All values that are not equal to given value.
  """
  peerName_not: String
  """
  All values that are contained in given list.
  """
  peerName_in: [String!]
  """
  All values that are not contained in given list.
  """
  peerName_not_in: [String!]
  """
  All values less than the given value.
  """
  peerName_lt: String
  """
  All values less than or equal the given value.
  """
  peerName_lte: String
  """
  All values greater than the given value.
  """
  peerName_gt: String
  """
  All values greater than or equal the given value.
  """
  peerName_gte: String
  """
  All values containing the given string.
  """
  peerName_contains: String
  """
  All values not containing the given string.
  """
  peerName_not_contains: String
  """
  All values starting with the given string.
  """
  peerName_starts_with: String
  """
  All values not starting with the given string.
  """
  peerName_not_starts_with: String
  """
  All values ending with the given string.
  """
  peerName_ends_with: String
  """
  All values not ending with the given string.
  """
  peerName_not_ends_with: String
  description: String
  """
  All values that are not equal to given value.
  """
  description_not: String
  """
  All values that are contained in given list.
  """
  description_in: [String!]
  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]
  """
  All values less than the given value.
  """
  description_lt: String
  """
  All values less than or equal the given value.
  """
  description_lte: String
  """
  All values greater than the given value.
  """
  description_gt: String
  """
  All values greater than or equal the given value.
  """
  description_gte: String
  """
  All values containing the given string.
  """
  description_contains: String
  """
  All values not containing the given string.
  """
  description_not_contains: String
  """
  All values starting with the given string.
  """
  description_starts_with: String
  """
  All values not starting with the given string.
  """
  description_not_starts_with: String
  """
  All values ending with the given string.
  """
  description_ends_with: String
  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  categoryName: String
  """
  All values that are not equal to given value.
  """
  categoryName_not: String
  """
  All values that are contained in given list.
  """
  categoryName_in: [String!]
  """
  All values that are not contained in given list.
  """
  categoryName_not_in: [String!]
  """
  All values less than the given value.
  """
  categoryName_lt: String
  """
  All values less than or equal the given value.
  """
  categoryName_lte: String
  """
  All values greater than the given value.
  """
  categoryName_gt: String
  """
  All values greater than or equal the given value.
  """
  categoryName_gte: String
  """
  All values containing the given string.
  """
  categoryName_contains: String
  """
  All values not containing the given string.
  """
  categoryName_not_contains: String
  """
  All values starting with the given string.
  """
  categoryName_starts_with: String
  """
  All values not starting with the given string.
  """
  categoryName_not_starts_with: String
  """
  All values ending with the given string.
  """
  categoryName_ends_with: String
  """
  All values not ending with the given string.
  """
  categoryName_not_ends_with: String
  categoryColor: String
  """
  All values that are not equal to given value.
  """
  categoryColor_not: String
  """
  All values that are contained in given list.
  """
  categoryColor_in: [String!]
  """
  All values that are not contained in given list.
  """
  categoryColor_not_in: [String!]
  """
  All values less than the given value.
  """
  categoryColor_lt: String
  """
  All values less than or equal the given value.
  """
  categoryColor_lte: String
  """
  All values greater than the given value.
  """
  categoryColor_gt: String
  """
  All values greater than or equal the given value.
  """
  categoryColor_gte: String
  """
  All values containing the given string.
  """
  categoryColor_contains: String
  """
  All values not containing the given string.
  """
  categoryColor_not_contains: String
  """
  All values starting with the given string.
  """
  categoryColor_starts_with: String
  """
  All values not starting with the given string.
  """
  categoryColor_not_starts_with: String
  """
  All values ending with the given string.
  """
  categoryColor_ends_with: String
  """
  All values not ending with the given string.
  """
  categoryColor_not_ends_with: String
  account: AccountWhereInput
  peer: PeerWhereInput
  comments_every: CommentWhereInput
  comments_some: CommentWhereInput
  comments_none: CommentWhereInput
  category: CategoryWhereInput
}

enum PaymentOrderByInput {
  id_ASC
  id_DESC
  postedDate_ASC
  postedDate_DESC
  amount_ASC
  amount_DESC
  peerName_ASC
  peerName_DESC
  description_ASC
  description_DESC
  categoryName_ASC
  categoryName_DESC
  categoryColor_ASC
  categoryColor_DESC
  rawData_ASC
  rawData_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

input TeamWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TeamWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TeamWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TeamWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  accounts_every: AccountWhereInput
  accounts_some: AccountWhereInput
  accounts_none: AccountWhereInput
  members_every: TeamMemberWhereInput
  members_some: TeamMemberWhereInput
  members_none: TeamMemberWhereInput
}

input TeamMemberAccountWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TeamMemberAccountWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TeamMemberAccountWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TeamMemberAccountWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  teamMember: TeamMemberWhereInput
  account: AccountWhereInput
}

enum TeamMemberAccountOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  email: String
  """
  All values that are not equal to given value.
  """
  email_not: String
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  """
  All values less than the given value.
  """
  email_lt: String
  """
  All values less than or equal the given value.
  """
  email_lte: String
  """
  All values greater than the given value.
  """
  email_gt: String
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  """
  All values containing the given string.
  """
  email_contains: String
  """
  All values not containing the given string.
  """
  email_not_contains: String
  """
  All values starting with the given string.
  """
  email_starts_with: String
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  """
  All values ending with the given string.
  """
  email_ends_with: String
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  firstName: String
  """
  All values that are not equal to given value.
  """
  firstName_not: String
  """
  All values that are contained in given list.
  """
  firstName_in: [String!]
  """
  All values that are not contained in given list.
  """
  firstName_not_in: [String!]
  """
  All values less than the given value.
  """
  firstName_lt: String
  """
  All values less than or equal the given value.
  """
  firstName_lte: String
  """
  All values greater than the given value.
  """
  firstName_gt: String
  """
  All values greater than or equal the given value.
  """
  firstName_gte: String
  """
  All values containing the given string.
  """
  firstName_contains: String
  """
  All values not containing the given string.
  """
  firstName_not_contains: String
  """
  All values starting with the given string.
  """
  firstName_starts_with: String
  """
  All values not starting with the given string.
  """
  firstName_not_starts_with: String
  """
  All values ending with the given string.
  """
  firstName_ends_with: String
  """
  All values not ending with the given string.
  """
  firstName_not_ends_with: String
  lastName: String
  """
  All values that are not equal to given value.
  """
  lastName_not: String
  """
  All values that are contained in given list.
  """
  lastName_in: [String!]
  """
  All values that are not contained in given list.
  """
  lastName_not_in: [String!]
  """
  All values less than the given value.
  """
  lastName_lt: String
  """
  All values less than or equal the given value.
  """
  lastName_lte: String
  """
  All values greater than the given value.
  """
  lastName_gt: String
  """
  All values greater than or equal the given value.
  """
  lastName_gte: String
  """
  All values containing the given string.
  """
  lastName_contains: String
  """
  All values not containing the given string.
  """
  lastName_not_contains: String
  """
  All values starting with the given string.
  """
  lastName_starts_with: String
  """
  All values not starting with the given string.
  """
  lastName_not_starts_with: String
  """
  All values ending with the given string.
  """
  lastName_ends_with: String
  """
  All values not ending with the given string.
  """
  lastName_not_ends_with: String
  passwordHash: String
  """
  All values that are not equal to given value.
  """
  passwordHash_not: String
  """
  All values that are contained in given list.
  """
  passwordHash_in: [String!]
  """
  All values that are not contained in given list.
  """
  passwordHash_not_in: [String!]
  """
  All values less than the given value.
  """
  passwordHash_lt: String
  """
  All values less than or equal the given value.
  """
  passwordHash_lte: String
  """
  All values greater than the given value.
  """
  passwordHash_gt: String
  """
  All values greater than or equal the given value.
  """
  passwordHash_gte: String
  """
  All values containing the given string.
  """
  passwordHash_contains: String
  """
  All values not containing the given string.
  """
  passwordHash_not_contains: String
  """
  All values starting with the given string.
  """
  passwordHash_starts_with: String
  """
  All values not starting with the given string.
  """
  passwordHash_not_starts_with: String
  """
  All values ending with the given string.
  """
  passwordHash_ends_with: String
  """
  All values not ending with the given string.
  """
  passwordHash_not_ends_with: String
  teams_every: TeamMemberWhereInput
  teams_some: TeamMemberWhereInput
  teams_none: TeamMemberWhereInput
}

type TeamResultAccount {
  id: ID!
  name: String!
}

scalar JSON

type TeamResultAcl {
  remove: Boolean!
  editRole: Boolean!
  editAvatar: Boolean!
  editProfile: Boolean!
  editPassword: Boolean!
}

enum TeamMemberRole {
  ADMIN
  MANAGER
  MEMBER
}

enum AccountOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  balance_ASC
  balance_DESC
  revenue_ASC
  revenue_DESC
  spendings_ASC
  spendings_DESC
  rawData_ASC
  rawData_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}
